/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.27).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.scry.poc.api;

import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.scry.poc.model.AddStatus;
import com.scry.poc.model.Shop;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2022-08-09T11:03:31.628Z")

@Validated
@Api(value = "shops", description = "the shops API")
@RequestMapping(value = "/v1")
public interface ShopsApi {

	@ApiOperation(value = "Add a new shop", nickname = "addShop", notes = "", tags = { "shop", })
	@ApiResponses(value = {  @ApiResponse(code = 200, message = "successful operation", response = AddStatus.class),
			@ApiResponse(code = 405, message = "Invalid input") })
	@RequestMapping(value = "/shops", produces = { "application/json" }, consumes = {
			"application/json" }, method = RequestMethod.POST)
	ResponseEntity<AddStatus> addShop(
			@ApiParam(value = "Shop object that needs to be added to the shops", required = true) @Valid @RequestBody Shop body);

	@ApiOperation(value = "Finds shops by latitude and longitude", nickname = "findShops", notes = "Multiple status values can be provided with comma separated strings", response = Shop.class, tags = {
			"shop", })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "successful operation", response = Shop.class),
			@ApiResponse(code = 400, message = "Invalid status value") })
	@RequestMapping(value = "/shops/{longitude}/{lattitude}", produces = {
			"application/json" }, method = RequestMethod.GET)
	ResponseEntity<Shop> findShops(
			@ApiParam(value = "longitude values that need to be considered for filter", required = true) @PathVariable("longitude") String longitude,
			@ApiParam(value = "lattitude values that need to be considered for filter", required = true) @PathVariable("lattitude") String lattitude);

	

}
